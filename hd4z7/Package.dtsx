<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/26/2018 3:25:23 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-KGG4CL5"
  DTS:CreatorName="DESKTOP-KGG4CL5\jacek"
  DTS:DTSID="{A88AF0C3-D5EB-4A63-83BC-A166350BF1F7}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.92"
  DTS:LocaleID="2057"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="29"
  DTS:VersionGUID="{69EDC6ED-E443-48AC-91A3-81889C5A39DA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-KGG4CL5.AdventureWorks2014]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{F1E6570C-4B8F-43EE-BDBE-AA58D63077F8}"
      DTS:ObjectName="DESKTOP-KGG4CL5.AdventureWorks2014">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DESKTOP-KGG4CL5;Initial Catalog=AdventureWorks2014;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-T6G7S4E.AdventureWorks2014]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C7A1A5F4-06F2-4655-928B-D6B9B0D67681}"
      DTS:ObjectName="DESKTOP-T6G7S4E.AdventureWorks2014">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DESKTOP-T6G7S4E;Initial Catalog=AdventureWorks2014;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{8C31A5CE-5735-42FF-BDBA-E6A244612D04}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=http://smtp.gmail.com/;UseWindowsAuthentication=True;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager 1]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{1EEA8673-A924-479E-9D58-D57769899E78}"
      DTS:ObjectName="SMTP Connection Manager 1">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=smtpserver;UseWindowsAuthentication=True;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\CREATE"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{61DC545A-8143-40E9-84D1-6647A9733A41}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="CREATE"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C7A1A5F4-06F2-4655-928B-D6B9B0D67681}"
          SQLTask:SqlStatementSource="CREATE SCHEMA [blady]&#xA;GO&#xA;&#xA;CREATE FUNCTION [blady].[getHireDate](@employeeID INT)&#xA;RETURNS date&#xA;AS&#xA;BEGIN&#xA;&#x9;RETURN &#xA;&#x9;(&#xA;&#x9;&#x9;SELECT HireDate &#xA;&#x9;&#x9;FROM HumanResources.Employee &#xA;&#x9;&#x9;WHERE BusinessEntityID = @employeeID&#xA;&#x9;)&#xA;END&#xA;GO&#xA;&#xA;CREATE FUNCTION [blady].[getBirthDate](@employeeID INT)&#xA;RETURNS date&#xA;AS&#xA;BEGIN&#xA;&#x9;RETURN &#xA;&#x9;(&#xA;&#x9;&#x9;SELECT BirthDate &#xA;&#x9;&#x9;FROM HumanResources.Employee &#xA;&#x9;&#x9;WHERE BusinessEntityID = @employeeID&#xA;&#x9;)&#xA;END&#xA;GO&#xA;&#xA;CREATE FUNCTION [blady].[datetimeToInt](@date datetime)&#xA;RETURNS INT&#xA;AS&#xA;BEGIN&#xA;&#x9;RETURN YEAR(@date) * 10000 + MONTH(@date) * 100 + DAY(@date)&#xA;END&#xA;GO&#xA;&#xA;CREATE TABLE [blady].[NAZWA_MIESIACA]&#xA;(&#xA;&#x9;[id] INT PRIMARY KEY,&#xA;&#x9;[Name] NVARCHAR(11)&#xA;)&#xA;GO&#xA;CREATE TABLE [blady].[DZIEN_TYGODNIA]&#xA;(&#xA;&#x9;[id] INT PRIMARY KEY,&#xA;&#x9;[Name] NVARCHAR(12)&#xA;)&#xA;GO&#xA;&#xA;CREATE TABLE [blady].[DIM_CUSTOMER]&#xA;(&#xA;&#x9;[CustomerID] INT CONSTRAINT nn_dCust_id NOT NULL,&#xA;&#x9;[FirstName] Name,&#xA;&#x9;[LastName] Name,&#xA;&#x9;[TerritoryName] Name,&#xA;&#x9;[CountryRegionCode] NVARCHAR(3),&#xA;&#x9;[Group] NVARCHAR(50)&#xA;)&#xA;GO&#xA;&#xA;CREATE TABLE [blady].[DIM_PRODUCT]&#xA;(&#xA;&#x9;[ProductID] INT CONSTRAINT nn_dProd_id NOT NULL,&#xA;&#x9;[Name] Name,&#xA;&#x9;[ListPrice] money,&#xA;&#x9;[Color] NVARCHAR(15),&#xA;&#x9;[Rating] INT,&#xA;&#x9;[SubCategoryName] Name,&#xA;&#x9;[CategoryName] Name&#xA;)&#xA;GO&#xA;&#xA;CREATE TABLE [blady].[DIM_SALESPERSON]&#xA;(&#xA;&#x9;[SalesPersonID] INT CONSTRAINT nn_dSP_id NOT NULL,&#xA;&#x9;[FirstName] Name,&#xA;&#x9;[LastName] Name,&#xA;&#x9;[Title] NVARCHAR(8),&#xA;&#x9;[Gender] NCHAR(1),&#xA;&#x9;[CountryRegionCode] NVARCHAR(3),&#xA;&#x9;[Group] NVARCHAR(50),&#xA;&#x9;[Age] AS DATEDIFF(YEAR, blady.getBirthDate(SalesPersonID), GETDATE()),&#xA;&#x9;[Seniority] AS DATEDIFF(YEAR, blady.getHireDate(SalesPersonID), GETDATE())&#xA;)&#xA;GO&#xA;&#xA;CREATE TABLE [blady].[FACT_SALES]&#xA;(&#xA;&#x9;[FactSalesID] INT IDENTITY(1,1),&#xA;&#x9;[ProductID] INT,&#xA;&#x9;[CustomerID] INT,&#xA;&#x9;[SalesPersonID] INT,&#xA;&#x9;[OrderDate] INT,&#xA;&#x9;[ShipDate] INT,&#xA;&#x9;[OrderQty] SMALLINT,&#xA;&#x9;[UnitPrice] money,&#xA;&#x9;[UnitPriceDiscount] money,&#xA;&#x9;[LineTotal] numeric(38,6)&#xA;)&#xA;GO&#xA;DBCC CHECKIDENT ('blady.FACT_SALES', RESEED, 0)&#xA;GO&#xA;CREATE TABLE [blady].[DIM_TIME]&#xA;(&#xA;&#x9;[PK_TIME] INT CONSTRAINT pk_dTime_time PRIMARY KEY,&#xA;&#x9;[Rok] INT,&#xA;&#x9;[Miesiac] NVARCHAR(11),&#xA;&#x9;[DzienTygodnia] NVARCHAR(12),&#xA;&#x9;[DzienMiesiaca] INT&#xA;);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DROP"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{68712D4C-FD34-4851-BA2F-29923541986A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DROP"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C7A1A5F4-06F2-4655-928B-D6B9B0D67681}"
          SQLTask:SqlStatementSource="DROP TABLE IF EXISTS [blady].[DIM_TIME]&#xA;GO&#xA;DROP TABLE IF EXISTS [blady].[DZIEN_TYGODNIA]&#xA;GO&#xA;DROP TABLE IF EXISTS [blady].[NAZWA_MIESIACA]&#xA;GO&#xA;IF EXISTS&#xA;(&#xA;&#x9;SELECT * &#xA;&#x9;FROM INFORMATION_SCHEMA.TABLES&#xA;&#x9;WHERE TABLE_NAME = 'FACT_SALES' AND TABLE_SCHEMA = 'blady'&#xA;)&#xA;DROP TABLE blady.FACT_SALES&#xA;GO&#xA;IF EXISTS&#xA;(&#xA;&#x9;SELECT * &#xA;&#x9;FROM INFORMATION_SCHEMA.TABLES&#xA;&#x9;WHERE TABLE_NAME = 'DIM_CUSTOMER' AND TABLE_SCHEMA = 'blady'&#xA;)&#xA;DROP TABLE blady.DIM_CUSTOMER&#xA;GO&#xA;IF EXISTS&#xA;(&#xA;&#x9;SELECT * &#xA;&#x9;FROM INFORMATION_SCHEMA.TABLES&#xA;&#x9;WHERE TABLE_NAME = 'DIM_PRODUCT' AND TABLE_SCHEMA = 'blady'&#xA;)&#xA;DROP TABLE blady.DIM_PRODUCT&#xA;GO&#xA;IF EXISTS&#xA;(&#xA;&#x9;SELECT * &#xA;&#x9;FROM INFORMATION_SCHEMA.TABLES&#xA;&#x9;WHERE TABLE_NAME = 'DIM_SALESPERSON' AND TABLE_SCHEMA = 'blady'&#xA;)&#xA;DROP TABLE blady.DIM_SALESPERSON&#xA;GO&#xA;DROP FUNCTION IF EXISTS [blady].[getBirthDate]&#xA;GO&#xA;DROP FUNCTION IF EXISTS [blady].[getHireDate]&#xA;GO&#xA;DROP FUNCTION IF EXISTS [blady].[datetimeToInt]&#xA;GO&#xA;&#xA;DROP SCHEMA IF EXISTS [blady];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\INSERT"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FA26D2A0-9396-4960-BCA8-DE2DE778D31D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="INSERT"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C7A1A5F4-06F2-4655-928B-D6B9B0D67681}"
          SQLTask:SqlStatementSource="INSERT INTO [blady].[DIM_CUSTOMER]&#xA;SELECT CustomerID, Firstname, LastName, SalesTerritory.[Name], CountryRegionCode, [Group]&#xA;FROM Sales.Customer LEFT JOIN Person.Person ON Sales.Customer.PersonID = Person.Person.BusinessEntityID&#xA;LEFT JOIN Sales.SalesTerritory ON Sales.Customer.TerritoryID = Sales.SalesTerritory.TerritoryID;&#xA;&#xA;INSERT INTO [blady].[DIM_PRODUCT]&#xA;SELECT DISTINCT Product.ProductID, Product.[Name], ListPrice, Color, AVG(Rating) OVER(PARTITION BY Product.ProductID), ProductSubcategory.[Name], ProductCategory.[Name]&#xA;FROM Production.Product LEFT JOIN Production.ProductSubcategory ON Product.ProductSubcategoryID = ProductSubcategory.ProductSubcategoryID&#xA;LEFT JOIN Production.ProductCategory ON ProductSubcategory.ProductCategoryID = ProductCategory.ProductCategoryID&#xA;LEFT JOIN Production.ProductReview ON Product.ProductID = ProductReview.ProductID;&#xA;&#xA;INSERT INTO [blady].[DIM_SALESPERSON]&#xA;SELECT SalesPerson.BusinessEntityID, FirstName, LastName, Title, Gender, CountryRegionCode, [Group]&#xA;FROM Sales.SalesPerson LEFT JOIN Sales.SalesTerritory ON SalesPerson.TerritoryID = Salesterritory.TerritoryID&#xA;LEFT JOIN Person.Person ON SalesPerson.BusinessEntityID = Person.BusinessEntityID&#xA;LEFT JOIN HumanResources.Employee ON SalesPerson.BusinessEntityID = Employee.BusinessEntityID;&#xA;&#xA;INSERT INTO [blady].[FACT_SALES](ProductID, CustomerID, SalesPersonID, OrderDate, ShipDate, OrderQty, UnitPrice, UnitPriceDiscount, LineTotal)&#xA;SELECT ProductID, CustomerID, SalesPersonID, blady.datetimeToInt(OrderDate), blady.datetimeToInt(ShipDate), OrderQty, UnitPrice, UnitPriceDiscount, LineTotal&#xA;FROM Sales.SalesOrderHeader JOIN Sales.SalesOrderDetail ON SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID;&#xA;&#xA;INSERT INTO [blady].[NAZWA_MIESIACA] VALUES&#xA;(1, 'Styczeń'),(2, 'Luty'),(3, 'Marzec'),(4, 'Kwiecień'),&#xA;(5, 'Maj'),(6, 'Czerwiec'),(7, 'Lipiec'),(8, 'Sierpień'),&#xA;(9, 'Wrzesień'),(10, 'Październik'),(11, 'Listopad'),(12, 'Grudzień');&#xA;&#xA;INSERT INTO [blady].[DZIEN_TYGODNIA] VALUES&#xA;(1, 'Poniedziałek'),(2, 'Wtorek'),(3, 'Środa'),(4, 'Czwartek'),&#xA;(5, 'Piątek'),(6, 'Sobota'),(7, 'Niedziela');&#xA;&#xA;INSERT INTO [blady].[DIM_TIME]&#xA;SELECT DISTINCT ShipDate, LEFT(ShipDate, 4) AS [Rok], blady.NAZWA_MIESIACA.[Name] AS [NazwaMiesiaca], &#xA;blady.DZIEN_TYGODNIA.[Name] AS [DzienTygodnia], RIGHT(ShipDate, 2) AS [DzienMiesiaca]&#xA;FROM blady.FACT_SALES JOIN blady.DZIEN_TYGODNIA ON DATEPART(weekday, CONVERT(char(8), ShipDate)) = blady.DZIEN_TYGODNIA.id&#xA;JOIN blady.NAZWA_MIESIACA ON LEFT(RIGHT(ShipDate, 4), 2) = blady.NAZWA_MIESIACA.id;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\INTEGRITY"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{71E030CC-5631-4EE7-AF91-837A6B486DD6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="INTEGRITY"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C7A1A5F4-06F2-4655-928B-D6B9B0D67681}"
          SQLTask:SqlStatementSource="ALTER TABLE [blady].[DIM_CUSTOMER]&#xA;ADD CONSTRAINT pk_dCust_id &#xA;PRIMARY KEY([CustomerID]);&#xA;&#xA;ALTER TABLE [blady].[DIM_PRODUCT]&#xA;ADD CONSTRAINT pk_dProd_id&#xA;PRIMARY KEY ([ProductID]);&#xA;&#xA;ALTER TABLE [blady].[DIM_SALESPERSON]&#xA;ADD CONSTRAINT pk_dSalesPerson_id&#xA;PRIMARY KEY ([SalesPersonID]);&#xA;&#xA;ALTER TABLE [blady].[FACT_SALES]&#xA;ADD CONSTRAINT fk_dFactSales_pId&#xA;FOREIGN KEY ([ProductID]) REFERENCES blady.DIM_PRODUCT([ProductID]);&#xA;&#xA;ALTER TABLE [blady].[FACT_SALES]&#xA;ADD CONSTRAINT fk_dFactSales_cId&#xA;FOREIGN KEY ([CustomerID]) REFERENCES blady.DIM_CUSTOMER([CustomerID]);&#xA;&#xA;ALTER TABLE [blady].[FACT_SALES]&#xA;ADD CONSTRAINT fk_dFactSales_spId&#xA;FOREIGN KEY ([SalesPersonID]) REFERENCES blady.DIM_SALESPERSON([SalesPersonID]);&#xA;&#xA;ALTER TABLE [blady].[FACT_SALES]&#xA;ADD CONSTRAINT pk_dFactSales_id&#xA;PRIMARY KEY ([FactSalesID]);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\NULLs"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C181C709-6DBE-4039-8EC7-5EBA9FBC4535}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="NULLs"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C7A1A5F4-06F2-4655-928B-D6B9B0D67681}"
          SQLTask:SqlStatementSource="UPDATE blady.DIM_PRODUCT&#xA;SET Color = 'Unknown'&#xA;WHERE Color IS NULL;&#xA;&#xA;UPDATE blady.DIM_PRODUCT&#xA;SET SubCategoryName = 'Unknown'&#xA;WHERE SubCategoryName IS NULL;&#xA;&#xA;UPDATE blady.DIM_SALESPERSON&#xA;SET CountryRegionCode = '000'&#xA;WHERE CountryRegionCode IS NULL;&#xA;&#xA;UPDATE blady.DIM_SALESPERSON&#xA;SET [Group] = 'Unknown'&#xA;WHERE [Group] IS NULL;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{27843D90-A4E1-44DE-8363-D554DB0B2749}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_331dab3431cb4a528437130b483a5fa3"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="ST_331dab3431cb4a528437130b483a5fa3.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{efdb8ab7-6efa-4ef8-bfe3-d04b185327b0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_331dab3431cb4a528437130b483a5fa3</RootNamespace>
    <AssemblyName>ST_331dab3431cb4a528437130b483a5fa3</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_331dab3431cb4a528437130b483a5fa3.Properties.Settings.get_Default():ST_331dab3431cb4a528437130b483a5fa3.Properties.Sett" +
    "ings")]

namespace ST_331dab3431cb4a528437130b483a5fa3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Net;
#endregion

namespace ST_331dab3431cb4a528437130b483a5fa3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        public void Main()
        {
            string sSubject = "HD4 test";
            string sBody = "Pomyslnie wyslano maila!";
            int iPriority = 1;

            if (SendMail(sSubject, sBody, iPriority))
            {
                Dts.TaskResult = 0;
            }
            else
            {
                //Fails the Task
                Dts.TaskResult = 1;
            }
        }

        public bool SendMail(string sSubject, string sMessage, int iPriority)
        {
            try
            {
                MailMessage mail = new MailMessage("228140@student.pwr.edu.pl", "228140@student.pwr.edu.pl");

                mail.Subject = sSubject;
                mail.Body = sMessage;

                mail.IsBodyHtml = true;
                SmtpClient smtp = new SmtpClient();
                smtp.Host = "student.pwr.edu.pl"; //Or Your SMTP Server Address
                smtp.UseDefaultCredentials = false;
                //smtp.EnableSsl = true;
                NetworkCredential myCredentials = new System.Net.NetworkCredential("228140", "Jamnior00");
                smtp.Credentials = myCredentials;
                smtp.Port = 587;
                smtp.Send(mail);
                mail = null;
                smtp = null;
                return true;
            }
            catch (Exception e)
            {

                return false;
            }

        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_331dab3431cb4a528437130b483a5fa3</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_331dab3431cb4a528437130b483a5fa3</msb:DisplayName>
    <msb:ProjectId>{D45F8064-43BF-4E6E-A726-60D3A0C0B161}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_331dab3431cb4a528437130b483a5fa3.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_331dab3431cb4a528437130b483a5fa3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_331dab3431cb4a528437130b483a5fa3")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_331dab3431cb4a528437130b483a5fa3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_331dab3431cb4a528437130b483a5fa3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_331dab3431cb4a528437130b483a5fa3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_331dab3431cb4a528437130b483a5fa3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_331dab3431cb4a528437130b483a5fa3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_331dab3431cb4a528437130b483a5fa3.dll">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
KwASAS4AMwASAS4AOwASAS4AQwDpAC4ASwAYAS4AUwASAS4AWwAvAUMAYwBxAEkAcwDgAGEAewBx
AGMAawBxABsAJgADAAEABAADAAAADwSpAAAAugCuAAAAbQWzAAIABQADAAIABgAFAAEABwAFAAIA
CAAHAASAAAABAAAAAxoAfgAAAAAAAAEAAAAEAAAAAAAAAAAAAABaADYAAAAAAA4AAAAAAAAAAAAA
AGMAxAIAAAAABAAAAAAAAAAAAAAAWgCWAwAAAAAAAAAAAQAAAHAEAAAFAAIAAAAAAABTVF8zMzFk
YWIzNDMxY2I0YTUyODQzNzEzMGI0ODNhNWZhMwA8TW9kdWxlPgB2YWx1ZV9fAG1zY29ybGliAFNl
bmQAZGVmYXVsdEluc3RhbmNlAE1haWxNZXNzYWdlAHNNZXNzYWdlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBy
ZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAFNjcmlwdE9i
amVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0uTmV0Lk1haWwAU2VuZE1haWwA
U1RfMzMxZGFiMzQzMWNiNGE1Mjg0MzcxMzBiNDgzYTVmYTMuZGxsAHNldF9Jc0JvZHlIdG1sAFN5
c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZv
AGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMzMxZGFiMzQz
MWNiNGE1Mjg0MzcxMzBiNDgzYTVmYTMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERl
YnVnZ2luZ01vZGVzAFNUXzMzMWRhYjM0MzFjYjRhNTI4NDM3MTMwYjQ4M2E1ZmEzLlByb3BlcnRp
ZXMAU2V0dGluZ3MAc2V0X0NyZWRlbnRpYWxzAHNldF9Vc2VEZWZhdWx0Q3JlZGVudGlhbHMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0AHNldF9TdWJqZWN0AHNTdWJqZWN0AFN5
c3RlbS5OZXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABzZXRfUG9ydABz
ZXRfSG9zdABJQ3JlZGVudGlhbHNCeUhvc3QAc2V0X0JvZHkAZ2V0X0Fzc2VtYmx5AGlQcmlvcml0
eQAAEUgARAA0ACAAdABlAHMAdAAAMVAAbwBtAHkAcwBsAG4AaQBlACAAdwB5AHMAbABhAG4AbwAg
AG0AYQBpAGwAYQAhAAAzMgAyADgAMQA0ADAAQABzAHQAdQBkAGUAbgB0AC4AcAB3AHIALgBlAGQA
dQAuAHAAbAAAJXMAdAB1AGQAZQBuAHQALgBwAHcAcgAuAGUAZAB1AC4AcABsAAANMgAyADgAMQA0
ADAAABNKAGEAbQBuAGkAbwByADAAMAAAcVMAVABfADMAMwAxAGQAYQBiADMANAAzADEAYwBiADQA
YQA1ADIAOAA0ADMANwAxADMAMABiADQAOAAzAGEANQBmAGEAMwAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAFFzEhUSGgVMltpNoUGXqOgABCABAQgDIAABBSABARER
BCABAQ4FIAEBEV0FBwMODggEIAASbQcHAxI9EkECBSACAQ4OBCABAQIFIAEBEnUFIAEBEj0GAAES
eRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSVQMGElkDBhIQ
AgYIAwYRFAYgAwIODggEAAASVQQAABJZBQABARJZBAAAEhADAAABBAgAElUECAASWQQIABIQCAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8zMzFk
YWIzNDMxY2I0YTUyODQzNzEzMGI0ODNhNWZhMwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4
AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
Ei5ORVQgRnJhbWV3b3JrIDQuNQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABwLwAAAAAAAAAAAACKLwAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAfC8AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAAfgMaAAABAAB+Axo/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADMAMwAxAGQAYQBiADMANAAzADEAYwBiADQAYQA1ADIAOAA0ADMANwAxADMAMABi
ADQAOAAzAGEANQBmAGEAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADYANQA5AC4AMwAyADIANQA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADMAMwAxAGQAYQBiADMANAAzADEAYwBiADQAYQA1ADIAOAA0ADMANwAxADMAMABiADQA
OAAzAGEANQBmAGEAMwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AMwAzADEAZABhAGIAMwA0ADMAMQBjAGIANABhADUAMgA4ADQAMwA3ADEA
MwAwAGIANAA4ADMAYQA1AGYAYQAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADMAMwAxAGQAYQBiADMANAAzADEAYwBiADQAYQA1ADIAOAA0ADMANwAxADMA
MABiADQAOAAzAGEANQBmAGEAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA2ADUAOQAuADMAMgAyADUANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA2ADUAOQAuADMAMgAyADUANgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACcPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{2B84CC88-2ACD-48A4-9B61-B250607E2CD9}"
      DTS:From="Package\DROP"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\CREATE" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{C7044D4E-B870-48A8-9AA8-4929F7F44848}"
      DTS:From="Package\CREATE"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\INSERT" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{06E1BC83-CA7F-4CB7-9D5D-05E63989BB09}"
      DTS:From="Package\INSERT"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\INTEGRITY" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{45491D2D-9854-4ED3-941B-2712B7394666}"
      DTS:From="Package\INTEGRITY"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\NULLs" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{7D7CC560-24BF-4F6A-9B85-D3C28E81ED40}"
      DTS:From="Package\NULLs"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Script Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="172,42"
          Id="Package\CREATE"
          TopLeft="108.5,124.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\DROP"
          TopLeft="113.5,39.5" />
        <NodeLayout
          Size="115,42"
          Id="Package\INSERT"
          TopLeft="135.5,196.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\INTEGRITY"
          TopLeft="112.5,263.5" />
        <NodeLayout
          Size="108,42"
          Id="Package\NULLs"
          TopLeft="313,270" />
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="462,274" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="194.75,81.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="193.75,166.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="193.5,238.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="275.5,287.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.5,0"
              Start="0,0"
              End="30,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="421,293">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="41,0"
              Start="0,0"
              End="33.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>